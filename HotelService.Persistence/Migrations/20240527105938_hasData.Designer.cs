// <auto-generated />
using System;
using HotelService.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelService.Persistence.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20240527105938_hasData")]
    partial class hasData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelService.Domain.Entities.ContactInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InformationContentValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InformationType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("ContactInformation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e66f288b-6044-4def-a62a-384bb3706be3"),
                            CreatedDate = new DateTime(2024, 5, 27, 13, 59, 38, 494, DateTimeKind.Local).AddTicks(1253),
                            HotelId = new Guid("b9f3de51-b8ca-4427-adee-6fd3548d61af"),
                            InformationContentValue = "05363956979",
                            InformationType = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bdbcaa6a-ed99-4373-ad40-0d3d08c4a712"),
                            CreatedDate = new DateTime(2024, 5, 27, 13, 59, 38, 494, DateTimeKind.Local).AddTicks(1271),
                            HotelId = new Guid("b9f3de51-b8ca-4427-adee-6fd3548d61af"),
                            InformationContentValue = "samt51.m@icloud.com",
                            InformationType = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8e091fa3-3ced-4d50-b89d-b890e0a2deb4"),
                            CreatedDate = new DateTime(2024, 5, 27, 13, 59, 38, 494, DateTimeKind.Local).AddTicks(1272),
                            HotelId = new Guid("b9f3de51-b8ca-4427-adee-6fd3548d61af"),
                            InformationContentValue = "5c6686c0-cd05-47f1-890f-c8b675ef5219",
                            InformationType = 3,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("HotelService.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorizedSurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9f3de51-b8ca-4427-adee-6fd3548d61af"),
                            AuthorizedName = "Samet",
                            AuthorizedSurName = "Bağlan",
                            CompanyName = "Worigo",
                            CreatedDate = new DateTime(2024, 5, 27, 13, 59, 38, 494, DateTimeKind.Local).AddTicks(3086),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("HotelService.Domain.Entities.Maps", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c6686c0-cd05-47f1-890f-c8b675ef5219"),
                            CityId = new Guid("c8570c8a-03c2-4f48-96dd-8bc43b917143"),
                            CountyId = new Guid("b3fca7a2-7fb8-4071-a89e-19b064612564"),
                            CreatedDate = new DateTime(2024, 5, 27, 13, 59, 38, 494, DateTimeKind.Local).AddTicks(4061),
                            Description = "dsadsa",
                            DistrictId = new Guid("3718bf9a-bd1a-4544-8cd9-eacdab3910ec"),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("HotelService.Domain.Entities.ContactInformation", b =>
                {
                    b.HasOne("HotelService.Domain.Entities.Hotel", "Hotel")
                        .WithMany("ContactInformations")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelService.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("ContactInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
